
#include <stdio.h>
#include <string.h>
typedef struct {
    char CIN [10];
    char Nom[10] ;
    char Prenom[10] ;
    int Montant ;
} Compte ;
Compte clients[10];
int i;
void seule_compte(){  
    printf("veuillez taper votre cin :");
    scanf("%s",clients[i].CIN); 
    printf("veuillez taper votre nom :");
    scanf("%s",clients[i].Nom);
    printf("veuillez taper votre prenom :");
    scanf("%s",clients[i].Prenom);
    printf("veuillez taper votre montant :");
    scanf("%d",&clients[i].Montant);
    printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[i].CIN,clients[i].Nom,clients[i].Prenom,clients[i].Montant);
    i++;
}
void multible_compte (){
    int n,j;
    printf("entrer le nombre de compte que vous voulez creer :");
    scanf("%d",&n);
    for(j=0;j<n;j++){
        seule_compte();
    }
}
void depot(){
    char cin[10];
    int z ,  montant;
    printf("\n entrer votre cin :");
    scanf("%s",cin);
    printf("\n entrer le montant a deposer :");
    scanf("%d",&montant);

    for( z=0;z<10;z++)
    {
        if(strcmp(clients[z].CIN,cin)==0){
        printf("\n •le montant avant le dépôt ");
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[z].CIN,clients[z].Nom,clients[z].Prenom,clients[z].Montant);
            clients[z].Montant = clients[z].Montant + montant;
        printf("\n •le montant après le dépôt ");
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[z].CIN,clients[z].Nom,clients[z].Prenom,clients[z].Montant);
        break;
        }
    }

}

void retrait(){
    char cin[10];
    int z, montant;
    printf("\n entrer votre cin :");
    scanf("%s",cin);
    printf("\n entrer le montant a retrait :");
    scanf("%d",&montant);

    for( z=0;z<10;z++)
    {
        if(strcmp(clients[z].CIN,cin)==0){
        printf("\n •le montant avant le retrait ");
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[z].CIN,clients[z].Nom,clients[z].Prenom,clients[z].Montant);
            clients[z].Montant = clients[z].Montant - montant;
        printf("\n •le montant après le retrait ");
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[z].CIN,clients[z].Nom,clients[z].Prenom,clients[z].Montant);
        break;
        }
    }

}

void    ascendant()
{
    int k , j  ,t ;
    Compte x;
    for(k=0;k<i-1;k++)
    {
        for(j=k+1;j<i;j++)
        {
            if ( clients[k].Montant > clients[j].Montant ) {
                x = clients[k];
                clients[k] = clients[j] ;
                clients[j] = x ;
            }
        }
        
    }
    printf("\n apres traige \n");
        for(t=0;t<i;t++)
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[t].CIN,clients[t].Nom,clients[t].Prenom,clients[t].Montant);
}
void  descendant()
{
    int k , j  ,t ;
    Compte x;
    for(k=0;k<i-1;k++)
    {
        for(j=k+1;j<i;j++)
        {
            if ( clients[k].Montant < clients[j].Montant ) {
                x = clients[k];
                clients[k] = clients[j] ;
                clients[j] = x ;
            }
        }
        
    }
    printf("\n apres traige \n");
        for(t=0;t<i;t++)
        printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[t].CIN,clients[t].Nom,clients[t].Prenom,clients[t].Montant);
}

void search()
{
    int i ;
    char cin[10];
    printf("donne cin ");
    scanf("%s",cin);
    for( i=0;i<10;i++)
    {
        if(strcmp(clients[i].CIN,cin)==0){
            printf("CIN: %s Nom: %s Prenom: %s Montant: %d DH\n",clients[i].CIN,clients[i].Nom,clients[i].Prenom,clients[i].Montant);
            break;
        }
    }
}
int main()
{

    int menu ;
    int choix;
    int choisir;
    do{
printf("\n ~~~~~~~~~~~~~~ Gestion Bancaire ~~~~~~~~~~~~~~");
printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
printf("\n 1 ~~~~~~~~ Introduire un compte bancaire") ;
printf("\n 2 ~~~~~~~~ Introduire plusieurs comptes bancaires") ;
printf("\n 3 ~~~~~~~~ Opérations (Retrait ; Dépôt)") ;
printf("\n 4 ~~~~~~~~ Affichage") ;
printf("\n 5 ~~~~~~~~ Rechecher de cin ") ;
printf("\n 6 ~~~~~~~~ quitter ") ;
printf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
 
printf("\n \n veuillez entrer un caractère :") ;
scanf("%d",&menu);
switch (menu) {
case 1 :    seule_compte() ;
break;
case 2 :    multible_compte () ;
break;
case 3 :printf("\n ~~~~~~~~~~~~~~ Opérations ~~~~~~~~~~~~~~");
        printf("\n1 ~~~~~~~~ Retrait");
        printf("\n2 ~~~~~~~~ Dépôt ");
        printf("\n entrer votre choix :");
        scanf("%d",&choix);
                if (choix==1){
                    printf("~~~~~~~~~~~~ Retrait ~~~~~~~~~~~~");
                    retrait();
                    }
                else if(choix==2){
                    printf("~~~~~~~~~~~~~ dépôt ~~~~~~~~~~~~~");
                    depot();
                    }
                else
                    printf("le caractère entrer est incorrect");
break;

case 4 : printf("1 ~~~~~~~~~~~~~ Par Ordre Ascendant\n");
         printf("2 ~~~~~~~~~~~~~ Par Ordre Descendant\n");
         printf("3 ~~~~~~~~~~~~~ Recherche par CIN\n");
         printf(" veuillez choisir :");
         
         scanf("%d",&choisir);
        if (choisir == 1)
            ascendant();
        if (choisir == 2)
            descendant();
        if(choisir == 3)
            search();
break;
case 5 :printf("~~~~~~~~~~~~~ Recherche par CIN~~~~~~~~~~~~~ \n");
        printf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n");
        search();
break;
case 6 : printf("vous avez quitter l'application");
break;
default : printf("\n le caractère entrée est incorrect"); ;
break;
}
}while(menu>0 && menu < 6);
    return 0;
} 
